warning: in the working copy of 'app/page.tsx', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/app/page.tsx b/app/page.tsx[m
[1mindex f900221..933241c 100644[m
[1m--- a/app/page.tsx[m
[1m+++ b/app/page.tsx[m
[36m@@ -1,9 +1,101 @@[m
 'use client';[m
 [m
 import Spline from '@splinetool/react-spline/next';[m
[31m-import { useEffect } from 'react';[m
[32m+[m[32mimport { useEffect, useState, useRef, useCallback } from 'react';[m
 [m
 export default function Home() {[m
[32m+[m[32m  const [isLeftSidebarOpen, setIsLeftSidebarOpen] = useState(true);[m
[32m+[m[32m  const [isRightSidebarOpen, setIsRightSidebarOpen] = useState(true);[m
[32m+[m[32m  const [isModulesOpen, setIsModulesOpen] = useState(true);[m
[32m+[m[32m  const [isMicActive, setIsMicActive] = useState(false);[m
[32m+[m[32m  const [audioLevel, setAudioLevel] = useState(0);[m
[32m+[m[32m  const splineRef = useRef<any>(null);[m
[32m+[m[32m  const mediaStreamRef = useRef<MediaStream | null>(null);[m
[32m+[m[32m  const audioContextRef = useRef<AudioContext | null>(null);[m
[32m+[m[32m  const analyserRef = useRef<AnalyserNode | null>(null);[m
[32m+[m[32m  const animationFrameRef = useRef<number | null>(null);[m
[32m+[m
[32m+[m[32m  // Funci√≥n para iniciar el micr√≥fono y an√°lisis de audio[m
[32m+[m[32m  const startMicrophone = useCallback(async () => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });[m
[32m+[m[32m      mediaStreamRef.current = stream;[m
[32m+[m[41m      [m
[32m+[m[32m      // Crear contexto de audio para an√°lisis[m
[32m+[m[32m      audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)();[m
[32m+[m[32m      analyserRef.current = audioContextRef.current.createAnalyser();[m
[32m+[m[32m      const source = audioContextRef.current.createMediaStreamSource(stream);[m
[32m+[m[32m      source.connect(analyserRef.current);[m
[32m+[m[32m      analyserRef.current.fftSize = 256;[m
[32m+[m[41m      [m
[32m+[m[32m      setIsMicActive(true);[m
[32m+[m[41m      [m
[32m+[m[32m      // Analizar audio y animar Spline[m
[32m+[m[32m      const analyzeAudio = () => {[m
[32m+[m[32m        if (analyserRef.current) {[m
[32m+[m[32m          const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);[m
[32m+[m[32m          analyserRef.current.getByteFrequencyData(dataArray);[m
[32m+[m[41m          [m
[32m+[m[32m          // Calcular nivel promedio de audio[m
[32m+[m[32m          const average = dataArray.reduce((a, b) => a + b) / dataArray.length;[m
[32m+[m[32m          const normalizedLevel = average / 255;[m
[32m+[m[32m          setAudioLevel(normalizedLevel);[m
[32m+[m[41m          [m
[32m+[m[32m          // Animar el objeto Spline basado en el nivel de audio[m
[32m+[m[32m          if (splineRef.current && normalizedLevel > 0.1) {[m
[32m+[m[32m            try {[m
[32m+[m[32m              // Intentar animar rotaci√≥n o escala basado en el audio[m
[32m+[m[32m              const scale = 1 + normalizedLevel * 0.3;[m
[32m+[m[32m              const rotation = normalizedLevel * Math.PI * 2;[m
[32m+[m[41m              [m
[32m+[m[32m              // Estos m√©todos dependen de la API de Spline[m
[32m+[m[32m              // Puedes ajustar seg√∫n tu escena espec√≠fica[m
[32m+[m[32m              if (splineRef.current.setVariable) {[m
[32m+[m[32m                splineRef.current.setVariable('audioLevel', normalizedLevel);[m
[32m+[m[32m              }[m
[32m+[m[32m            } catch (e) {[m
[32m+[m[32m              // Si la API de Spline no soporta estos m√©todos, ignorar[m
[32m+[m[32m            }[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        animationFrameRef.current = requestAnimationFrame(analyzeAudio);[m
[32m+[m[32m      };[m
[32m+[m[41m      [m
[32m+[m[32m      analyzeAudio();[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('Error al acceder al micr√≥fono:', error);[m
[32m+[m[32m      alert('Por favor, permite el acceso al micr√≥fono para usar el asistente de voz.');[m
[32m+[m[32m    }[m
[32m+[m[32m  }, []);[m
[32m+[m
[32m+[m[32m  // Funci√≥n para detener el micr√≥fono[m
[32m+[m[32m  const stopMicrophone = useCallback(() => {[m
[32m+[m[32m    if (mediaStreamRef.current) {[m
[32m+[m[32m      mediaStreamRef.current.getTracks().forEach(track => track.stop());[m
[32m+[m[32m      mediaStreamRef.current = null;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (audioContextRef.current) {[m
[32m+[m[32m      audioContextRef.current.close();[m
[32m+[m[32m      audioContextRef.current = null;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (animationFrameRef.current) {[m
[32m+[m[32m      cancelAnimationFrame(animationFrameRef.current);[m
[32m+[m[32m      animationFrameRef.current = null;[m
[32m+[m[32m    }[m
[32m+[m[32m    setIsMicActive(false);[m
[32m+[m[32m    setAudioLevel(0);[m
[32m+[m[32m  }, []);[m
[32m+[m
[32m+[m[32m  // Toggle del micr√≥fono[m
[32m+[m[32m  const toggleMicrophone = useCallback(() => {[m
[32m+[m[32m    if (isMicActive) {[m
[32m+[m[32m      stopMicrophone();[m
[32m+[m[32m    } else {[m
[32m+[m[32m      startMicrophone();[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [isMicActive, startMicrophone, stopMicrophone]);[m
[32m+[m
   useEffect(() => {[m
     // Funci√≥n para ocultar el badge de Spline[m
     const hideSplineBadge = () => {[m
[36m@@ -35,20 +127,57 @@[m [mexport default function Home() {[m
     // Limpiar despu√©s de 5 segundos (cuando ya deber√≠a estar todo cargado)[m
     setTimeout(() => clearInterval(interval), 5000);[m
     [m
[31m-    return () => clearInterval(interval);[m
[31m-  }, []);[m
[32m+[m[32m    return () => {[m
[32m+[m[32m      clearInterval(interval);[m
[32m+[m[32m      stopMicrophone();[m
[32m+[m[32m    };[m
[32m+[m[32m  }, [stopMicrophone]);[m
 [m
   return ([m
     <main className="app-container">[m
       {/* M√≥dulos del Curso de Ingl√©s */}[m
[31m-      <div className="sidebar sidebar-left">[m
[32m+[m[32m      <div className={`sidebar sidebar-left ${!isLeftSidebarOpen ? 'sidebar-closed' : ''}`}>[m
[32m+[m[32m        {/* Bot√≥n de cerrar neum√≥rfico */}[m
[32m+[m[32m        <button[m[41m [m
[32m+[m[32m          className="neomorphic-close-btn"[m
[32m+[m[32m          onClick={() => setIsLeftSidebarOpen(!isLeftSidebarOpen)}[m
[32m+[m[32m          aria-label={isLeftSidebarOpen ? 'Close sidebar' : 'Open sidebar'}[m
[32m+[m[32m        >[m
[32m+[m[32m          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">[m
[32m+[m[32m            <path[m[41m [m
[32m+[m[32m              d={isLeftSidebarOpen ? "M18 6L6 18M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"}[m
[32m+[m[32m              stroke="currentColor"[m[41m [m
[32m+[m[32m              strokeWidth="2"[m[41m [m
[32m+[m[32m              strokeLinecap="round"[m[41m [m
[32m+[m[32m              strokeLinejoin="round"[m
[32m+[m[32m            />[m
[32m+[m[32m          </svg>[m
[32m+[m[32m        </button>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Efecto de humo gradiente */}[m
[32m+[m[32m        <div className="sidebar-smoke-effect"></div>[m
         <div className="sidebar-frame">[m
[31m-          <div className="sidebar-header-frame">[m
[32m+[m[32m          <div className="sidebar-header-frame dropdown-header" onClick={() => setIsModulesOpen(!isModulesOpen)}>[m
             <h2>Modules</h2>[m
[32m+[m[32m            <svg[m[41m [m
[32m+[m[32m              className={`dropdown-arrow ${isModulesOpen ? 'open' : ''}`}[m
[32m+[m[32m              width="12"[m[41m [m
[32m+[m[32m              height="12"[m[41m [m
[32m+[m[32m              viewBox="0 0 24 24"[m[41m [m
[32m+[m[32m              fill="none"[m
[32m+[m[32m            >[m
[32m+[m[32m              <path[m[41m [m
[32m+[m[32m                d="M6 9l6 6 6-6"[m[41m [m
[32m+[m[32m                stroke="currentColor"[m[41m [m
[32m+[m[32m                strokeWidth="2"[m[41m [m
[32m+[m[32m                strokeLinecap="round"[m[41m [m
[32m+[m[32m                strokeLinejoin="round"[m
[32m+[m[32m              />[m
[32m+[m[32m            </svg>[m
           </div>[m
         </div>[m
         [m
[31m-        <div className="sidebar-frame">[m
[32m+[m[32m        <div className={`sidebar-frame modules-container ${!isModulesOpen ? 'collapsed' : ''}`}>[m
           <div className="sidebar-content">[m
             <div className="lesson-card active">[m
               <div className="lesson-number">01</div>[m
[36m@@ -99,12 +228,63 @@[m [mexport default function Home() {[m
       {/* Contenido Central - Spline */}[m
       <div className="main-content">[m
         <Spline[m
[32m+[m[32m          ref={splineRef}[m
           scene="https://prod.spline.design/jpptJsbqA5KYoI05/scene.splinecode" [m
         />[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Bot√≥n de micr√≥fono flotante */}[m
[32m+[m[32m        <button[m[41m [m
[32m+[m[32m          className={`mic-button ${isMicActive ? 'active' : ''}`}[m
[32m+[m[32m          onClick={toggleMicrophone}[m
[32m+[m[32m          aria-label="Toggle microphone"[m
[32m+[m[32m        >[m
[32m+[m[32m          <div className="mic-pulse" style={{ transform: `scale(${1 + audioLevel * 0.5})` }}></div>[m
[32m+[m[32m          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">[m
[32m+[m[32m            <path[m[41m [m
[32m+[m[32m              d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"[m[41m [m
[32m+[m[32m              fill="currentColor"[m
[32m+[m[32m            />[m
[32m+[m[32m            <path[m[41m [m
[32m+[m[32m              d="M19 10v2a7 7 0 0 1-14 0v-2M12 19v4M8 23h8"[m[41m [m
[32m+[m[32m              stroke="currentColor"[m[41m [m
[32m+[m[32m              strokeWidth="2"[m[41m [m
[32m+[m[32m              strokeLinecap="round"[m[41m [m
[32m+[m[32m              strokeLinejoin="round"[m
[32m+[m[32m            />[m
[32m+[m[32m          </svg>[m
[32m+[m[32m          {isMicActive && ([m
[32m+[m[32m            <div className="audio-visualizer">[m
[32m+[m[32m              <span style={{ height: `${audioLevel * 100}%` }}></span>[m
[32m+[m[32m              <span style={{ height: `${audioLevel * 80}%` }}></span>[m
[32m+[m[32m              <span style={{ height: `${audioLevel * 120}%` }}></span>[m
[32m+[m[32m              <span style={{ height: `${audioLevel * 90}%` }}></span>[m
[32m+[m[32m              <span style={{ height: `${audioLevel * 110}%` }}></span>[m
[32m+[m[32m            </div>[m
[32m+[m[32m          )}[m
[32m+[m[32m        </button>[m
       </div>[m
 [m
       {/* Sidebar Derecho - Search & Sources */}[m
[31m-      <div className="sidebar sidebar-right">[m
[32m+[m[32m      <div className={`sidebar sidebar-right ${!isRightSidebarOpen ? 'sidebar-closed' : ''}`}>[m
[32m+[m[32m        {/* Bot√≥n de cerrar neum√≥rfico */}[m
[32m+[m[32m        <button[m[41m [m
[32m+[m[32m          className="neomorphic-close-btn right"[m
[32m+[m[32m          onClick={() => setIsRightSidebarOpen(!isRightSidebarOpen)}[m
[32m+[m[32m          aria-label={isRightSidebarOpen ? 'Close sidebar' : 'Open sidebar'}[m
[32m+[m[32m        >[m
[32m+[m[32m          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">[m
[32m+[m[32m            <path[m[41m [m
[32m+[m[32m              d={isRightSidebarOpen ? "M18 6L6 18M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"}[m
[32m+[m[32m              stroke="currentColor"[m[41m [m
[32m+[m[32m              strokeWidth="2"[m[41m [m
[32m+[m[32m              strokeLinecap="round"[m[41m [m
[32m+[m[32m              strokeLinejoin="round"[m
[32m+[m[32m            />[m
[32m+[m[32m          </svg>[m
[32m+[m[32m        </button>[m
[32m+[m[41m        [m
[32m+[m[32m        {/* Efecto de humo gradiente */}[m
[32m+[m[32m        <div className="sidebar-smoke-effect"></div>[m
         <div className="sidebar-frame">[m
           <div className="search-frame">[m
             <input [m
